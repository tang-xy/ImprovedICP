# -*- coding: utf-8 -*-
"""
/***************************************************************************
 ImprovedICPDialog
                                 A QGIS plugin
 Grid map fusion Qgis plugin using improved ICP algorithm
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-06-06
        git sha              : $Format:%H$
        copyright            : (C) 2018 by Tang-XY
        email                : 2015302590078@whu.edu.cn
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
import sys

from PyQt5 import uic
from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QFileDialog

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'improved_ICP_dialog_base.ui'))


class ImprovedICPDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(ImprovedICPDialog, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

    def setupQgisUI(self, iface):
        """动态加载qgis相关配置"""
        canvas = iface.mapCanvas()
        layerList = canvas.layers()
        self.TargetName.addItem("")
        for layer in layerList:
            self.TargetName.addItem(layer.name())

    def on_TargetName_currentIndexChanged(self, layerName):
        """设置其他控件可用性随Targrt变化"""
        if layerName != '' and layerName != 0:
            self.SourceName.setEnabled(True)
            self.OutputName.setEnabled(True)
            self.SelectOutputPath.setEnabled(True)
        if layerName == '':
            self.SourceName.setEnabled(False)
            self.OutputName.setEnabled(False)
            self.SelectOutputPath.setEnabled(False)
    
    def on_SelectOutputPath_clicked(self):
        """保存图片"""
        fileName = QFileDialog.getSaveFileName(self,'创建bmp图片并保存',os.path.dirname(__file__),r'bmp(*.bmp)')
        if fileName[0] == ' ':
            pass
        else :
            self.OutputName.setText(fileName[0])

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    tetris = ImprovedICPDialog()
    tetris.show()
    sys.exit(app.exec_())
